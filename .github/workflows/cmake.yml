name: CMake
on: [ push ]

env:
  VCPKG_COMMIT: '4428702c1c56fdb7cb779584efdcba254d7b57ca'

jobs:
  job:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: windows-latest
            cmakeGenerator: 'VS16Win64'
            osPrettyName: Windows
          - os: ubuntu-latest
            cmakeGenerator: 'UnixMakefiles'
            osPrettyName: Ubuntu
          - os: macos-latest
            cmakeGenerator: 'Ninja'
            osPrettyName: macOS

    steps:
      - name: Install dependencies (ubuntu)
        run: sudo apt install libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev
        if: matrix.os == 'ubuntu-latest'

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: lukka/get-cmake@latest

      - uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ env.VCPKG_COMMIT }}'
          vcpkgJsonGlob: '${{ github.workspace }}/vcpkg.json'

      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg

      - name: Install project
        run: cmake --install '${{ github.workspace }}/builds/ninja' --prefix '${{ github.workspace }}/out'

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'gbtest-${{ matrix.osPrettyName }}'
          path: '${{ github.workspace }}/out'